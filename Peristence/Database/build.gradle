plugins {
    id "org.sonarqube" version "2.7"
    id 'com.adarshr.test-logger' version '1.7.0'

}

apply plugin: 'java'

group = 'cz.neumimto.rpg'
version = '2.1.0-SNAPSHOT'

dependencies {
    implementation project(':Common-Persistence')
    implementation project(':API')
    implementation project(':Common')

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'

    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation 'com.google.code.gson:gson:2.8.5'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.1'

    testImplementation project(':Common')
    testImplementation project(':API')
    testImplementation project(':Common-Persistence')
    testImplementation project(':Common-Persistence-Test')
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    testImplementation 'com.google.guava:guava:28.1-jre'
    testImplementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
    testImplementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
    testImplementation 'com.h2database:h2:1.4.199'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.5.1'

    jar {
       // from {
       //     configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
       // }
    }


}


test {
    useJUnitPlatform()
    dependsOn 'cleanTest'

    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"

    }

    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
