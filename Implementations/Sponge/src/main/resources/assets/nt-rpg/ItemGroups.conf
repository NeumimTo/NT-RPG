#Configuration which should contain structured list of items. Those items will be recognized by the plugin as weapons/armor pieces/shields
ItemGroups: [
  {
    WeaponClass: Blades
    Items: [
      {
        WeaponClass: Swords
        Items: [
          "minecraft:diamond_sword"
          "minecraft:golden_sword"
          "minecraft:iron_sword"
          "minecraft:stone_sword"
          "minecraft:wooden_sword"
        ]
        #Properties which you may reference in skills, or class/race configurations
        #If the property name ends with _mult it will be recognized as multiplicator, and its default value is 1
        #If the property name does not end with _mult its default value is 0
        #Its strongly DISCOURAGED to define hundrends of properties here.
        Properties: [
          blades_damage_bonus
          blades_damage_mult
        ]
      }
      #     You can simply add or edit your custom any weapon class.
      #
      #			{
      #				WeaponClass: Daggers
      #				Items: [
      #                 #On a vanilla server you might want to use custom item models to create new weapons.
      #					#Following option will recognize remodelled WOODEN_SWORD with the modelId "1" as an item from the weapon class "Daggers"
      #					"minecraft:woden_sword;model=1"
      #                 As above but also defines default damage to 15
      #					"minecraft:woden_sword;model=1;damage=15"
      #                 and this is possible as well
      #					"minecraft:woden_sword;damage=15"
      #				]
      #				Properties: [
      #				  blades_damage_mult
      #					daggers_damage_bonus
      #				]
      #			}
      {
        WeaponClass: Cleaving
        Items: [
          "minecraft:diamond_axe"
          "minecraft:golden_axe"
          "minecraft:iron_axe"
          "minecraft:stone_axe"
          "minecraft:wooden_axe"
        ]
        Properties: [
          cleaving_damage_bonus
          blades_damage_mult
        ]
      }
    ]
  }
  {
    WeaponClass: Bows
    Items: [
      "minecraft:bow"
    ]
  }
  {
    WeaponClass: Blunt
    Items: [
      {
        WeaponClass: Tools
        Items: [
          "minecraft:diamond_hoe"
          "minecraft:golden_hoe"
          "minecraft:iron_hoe"
          "minecraft:stone_hoe"
          "minecraft:wooden_hoe"
          "minecraft:diamond_shovel"
          "minecraft:golden_shovel"
          "minecraft:iron_shovel"
          "minecraft:stone_shovel"
          "minecraft:wooden_shovel"
        ]
        Properties: [
          tools_damage_bonus
          #blunt_weapons_damage_mult is inherited from Blunt WeaponClass
        ]
      }
      {
        WeaponClass: Pickaxes
        Items: [
          "minecraft:diamond_pickaxe"
          "minecraft:golden_pickaxe"
          "minecraft:iron_pickaxe"
          "minecraft:stone_pickaxe"
          "minecraft:wooden_pickaxe"
        ]
        Properties: [
          pickaxes_damage_bonus
          #blunt_weapons_damage_mult is inherited from Blunt WeaponClass
        ]
      }
    ]
    Properties: [
      blunt_weapons_damage_mult
    ]
  }
]
ItemMetaSubtypes: [
  #RING
]
#List of inventory slots to be handled by the plugin
#To get desired slotId run plugin with DEBUG enabled and interact with desired slots
#Format is slotId;ItemMetaSubtype
#Eventually you can tell the plugin to apply some filters to defined slots
#If you define a line such as "9;RING", it means that players might put into slot with a slot-id 9 only itemstacks having nbt tag nt-rpg:item_subtype.ring
#The filters have to be defined in the section "ItemMetaSubtypes"
#You will not need those filters if:
# - You have a forge mod, which is already doing some checks for items before its equiped
# - You have a vanilla server and you are not interested in this filter feature, or you wish not to have any additional slots
#
#
#
# !! Slot ids might shift after mod or sponge update !!
InventorySlots: [
  {
    type: "net.minecraft.entity.player.InventoryPlayer"
    slots: [
      0
      1
      2
      3
      4
      5
      6
      7
      8
      9
      40
      39
      38
      37
      36
    ]
  }
  {
    type: "baubles.get.cap.BaublesContainer"
    slots: [
      9
      10
      11
      12
      13
      14
      15
    ]
  }
]
SlotAdditionalBehavior: [
    {
        type: "net.minecraft.entity.player.InventoryPlayer"
        slots: [
            39
            38
            36
            37
        ]
        behavior: armor
    }
    {
        type: "net.minecraft.entity.player.InventoryPlayer"
        slots: [
            40
        ]
        behavior: offhand
    }
]
#List of modded armor item types, which is the player able to equip into vanilla armor slots
#The format is "modId:itemname"
Armor: [
  "minecraft:diamond_boots"
  "minecraft:diamond_leggings"
  "minecraft:diamond_chestplate"
  "minecraft:diamond_helmet"
  "minecraft:golden_boots"
  "minecraft:golden_leggings"
  "minecraft:golden_chestplate"
  "minecraft:golden_helmet"
  "minecraft:iron_boots"
  "minecraft:iron_leggings"
  "minecraft:iron_chestplate"
  "minecraft:iron_helmet"
  "minecraft:chainmail_boots"
  "minecraft:chainmail_leggings"
  "minecraft:chainmail_chestplate"
  "minecraft:chainmail_helmet"
  "minecraft:leather_boots"
  "minecraft:leather_leggings"
  "minecraft:leather_chestplate"
  "minecraft:leather_helmet"
]
#List of shield item types, which is the player able to equip into offhand slot
#The format is "modId:itemname"
Shields: [
  "minecraft:shield"
]