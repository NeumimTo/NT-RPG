Skills: [
    {
        #This skill is equivalent of a javaskill cz.neumimto.skills.active.SkillMegabolt.
        # Id must be unique
        Id: "ntrpg:megabolt2"

        # Skill types
        Skill-Types: [
            "ntrpg:aoe",
            "ntrpg:lightning"
        ]

        # If the skill may deal damage there must be node DamageType.
        # If the skill deals no damage to anyone (eg simple healing) this node should not be defined
        Damage-Type: "magic"
        Handler: "ntrpg:aoe_lightning_damage"
    }
    {
        Id: "id:vitalize"
        Skill-Types: [
            "ntrpg:healing"
        ]
        Handler: "ntrpg:periodic_regeneration"
    }
    {
        # AOE Stun and damage
        Id: "ntrpg:wrestle"
        Handler: "custom"
        Skill-Types: [
            "ntrpg:aoe",
            "ntrpg:physical"
        ]
        Damage-Type: PHYSICAL
        Spell: [
          # Start of skill main logic
          {
            # Start of scope

            # Target-Selector brings "target" variable into scope (ie we can reference "target" variable anywhere below, until current scope is closed)
            # Target-Selector nearby_entities searches for all entities (monsters, party members, animals, ...) around the caster in specific range
            Target-Selector: nearby_enemies
            # Parameters for target selector. Target selector nearby_entities requires a single parameter - a radius around player where the entities will be searched for
            # Params: [ range ] or Params: [ "settings.range" ] means that the parameter MUST be configured in skilltrees in skill settings section,
            Params: [
              "range"
            ]

            # Mechanics basically a section that tells us what to do with each target/entity
            Mechanics: [
              {
                # if a caster can damage the target
                If: damage_check
                # then
                Then: [
                    # apply_effect effect having duration of X to the target (where X is skill settings node "effect_duration")
                    {
                        Type: apply_effect
                        Params: [
                            "Effect(StunEffect, target, settings.effect_duration)"
                        ]
                    }
                    # , check if damage is configured (again check the skillsettings if damage > 0)
                    {
                        If: "# settings.damage > 0"
                        Then: [
                        # and eventually damage the target
                            {
                                Type: damage
                            }
                        ]
                    }
                ]
              }
            ]
            #End of scope
          }
        ]
    }
    {
        Id: "ntrpg:stun"
        Handler: "custom"
        Supertype: "Targeted"
        Skill-Types: [
            "ntrpg:aoe",
            "ntrpg:physical"
        ]
        Damage-Type: PHYSICAL
        Spell: [
            {
                Mechanics: [
                    {
                      Type: apply_effect
                      Params: [
                            "Effect(StunEffect, target, settings.effect_duration)"
                      ]
                    }
                    {
                        If: "# settings.damage > 0"
                        Then: [
                            {
                                Type: damage
                            }
                        ]
                    }
                ]
            }
        ]
    }
]